/* eslint-disable */
/* tslint:disable */
// @ts-nocheck
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: g859oFSV3DRmGwpuroRhgj
// Component: 2G_Uke7bZMHO

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import {
  Flex as Flex__,
  MultiChoiceArg,
  PlasmicDataSourceContextProvider as PlasmicDataSourceContextProvider__,
  PlasmicIcon as PlasmicIcon__,
  PlasmicImg as PlasmicImg__,
  PlasmicLink as PlasmicLink__,
  PlasmicPageGuard as PlasmicPageGuard__,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  Stack as Stack__,
  StrictProps,
  Trans as Trans__,
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants,
  generateOnMutateForSpec,
  generateStateOnChangeProp,
  generateStateOnChangePropForCodeComponents,
  generateStateValueProp,
  get as $stateGet,
  hasVariant,
  initializeCodeComponentStates,
  initializePlasmicStates,
  makeFragment,
  omit,
  pick,
  renderPlasmicSlot,
  set as $stateSet,
  useCurrentUser,
  useDollarState,
  usePlasmicTranslator,
  useTrigger,
  wrapWithClassName
} from "@plasmicapp/react-web";
import {
  DataCtxReader as DataCtxReader__,
  useDataEnv,
  useGlobalActions
} from "@plasmicapp/react-web/lib/host";

import NavigationBar from "../../NavigationBar"; // plasmic-import: ye2U4TvtfPNY/component
import { Reveal } from "@plasmicpkgs/react-awesome-reveal";
import ProjectCard from "../../ProjectCard"; // plasmic-import: LEtIYZ_upnZi/component
import ContactSection from "../../ContactSection"; // plasmic-import: mlOC_VwLeQ0r/component
import Footer from "../../Footer"; // plasmic-import: EsbqoEgGV-oi/component
import { _useGlobalVariants } from "./plasmic"; // plasmic-import: g859oFSV3DRmGwpuroRhgj/projectModule
import { _useStyleTokens } from "./PlasmicStyleTokensProvider"; // plasmic-import: g859oFSV3DRmGwpuroRhgj/styleTokensProvider

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic.module.css"; // plasmic-import: g859oFSV3DRmGwpuroRhgj/projectcss
import sty from "./PlasmicHomepage.module.css"; // plasmic-import: 2G_Uke7bZMHO/css

createPlasmicElementProxy;

export type PlasmicHomepage__VariantMembers = {};
export type PlasmicHomepage__VariantsArgs = {};
type VariantPropType = keyof PlasmicHomepage__VariantsArgs;
export const PlasmicHomepage__VariantProps = new Array<VariantPropType>();

export type PlasmicHomepage__ArgsType = {};
type ArgPropType = keyof PlasmicHomepage__ArgsType;
export const PlasmicHomepage__ArgProps = new Array<ArgPropType>();

export type PlasmicHomepage__OverridesType = {
  root?: Flex__<"div">;
  navigationBar?: Flex__<typeof NavigationBar>;
  introduction?: Flex__<"section">;
  mainTextContainer?: Flex__<"div">;
  h1?: Flex__<"h1">;
  curriculum?: Flex__<"section">;
  link?: Flex__<"a"> & Partial<LinkProps>;
  meetings?: Flex__<"section">;
  contactSection?: Flex__<typeof ContactSection>;
  footer?: Flex__<typeof Footer>;
};

export interface DefaultHomepageProps {}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicHomepage__RenderFunc(props: {
  variants: PlasmicHomepage__VariantsArgs;
  args: PlasmicHomepage__ArgsType;
  overrides: PlasmicHomepage__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(
    () =>
      Object.assign(
        {},
        Object.fromEntries(
          Object.entries(props.args).filter(([_, v]) => v !== undefined)
        )
      ),
    [props.args]
  );

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();

  const $ctx = useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const styleTokensClassNames = _useStyleTokens();

  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary" />
        <title key="title">{PlasmicHomepage.pageMetadata.title}</title>
        <meta
          key="og:title"
          property="og:title"
          content={PlasmicHomepage.pageMetadata.title}
        />
        <meta
          key="twitter:title"
          name="twitter:title"
          content={PlasmicHomepage.pageMetadata.title}
        />
        <meta
          key="description"
          name="description"
          content={PlasmicHomepage.pageMetadata.description}
        />
        <meta
          key="og:description"
          property="og:description"
          content={PlasmicHomepage.pageMetadata.description}
        />
        <meta
          key="twitter:description"
          name="twitter:description"
          content={PlasmicHomepage.pageMetadata.description}
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            styleTokensClassNames,
            sty.root
          )}
        >
          <NavigationBar
            data-plasmic-name={"navigationBar"}
            data-plasmic-override={overrides.navigationBar}
            className={classNames("__wab_instance", sty.navigationBar)}
          />

          <section
            data-plasmic-name={"introduction"}
            data-plasmic-override={overrides.introduction}
            className={classNames(projectcss.all, sty.introduction)}
          >
            <div className={classNames(projectcss.all, sty.freeBox__aIuQu)}>
              <div
                data-plasmic-name={"mainTextContainer"}
                data-plasmic-override={overrides.mainTextContainer}
                className={classNames(projectcss.all, sty.mainTextContainer)}
              >
                <h1
                  data-plasmic-name={"h1"}
                  data-plasmic-override={overrides.h1}
                  className={classNames(
                    projectcss.all,
                    projectcss.h1,
                    projectcss.__wab_text,
                    sty.h1
                  )}
                >
                  {"The LTHS Math Club \ud83d\udc4b"}
                </h1>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__iuc84
                  )}
                >
                  <React.Fragment>
                    <React.Fragment>{""}</React.Fragment>
                    {
                      <h2
                        className={classNames(
                          projectcss.all,
                          projectcss.h2,
                          projectcss.__wab_text,
                          sty.h2___1J52C
                        )}
                      >
                        {"Let's enjoy math, together!"}
                      </h2>
                    }
                    <React.Fragment>{""}</React.Fragment>
                  </React.Fragment>
                </div>
                <div
                  className={classNames(projectcss.all, sty.freeBox___3Ddva)}
                >
                  <div
                    className={classNames(projectcss.all, sty.columns__iGnWa)}
                  >
                    <div
                      className={classNames(projectcss.all, sty.column___8UqLn)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__heonx
                        )}
                      >
                        {""}
                      </div>
                    </div>
                    <div
                      className={classNames(projectcss.all, sty.column__pLzr8)}
                    >
                      <div
                        className={classNames(
                          projectcss.all,
                          projectcss.__wab_text,
                          sty.text__k3860
                        )}
                      >
                        {""}
                      </div>
                    </div>
                  </div>
                </div>
                <div className={classNames(projectcss.all, sty.freeBox__llvHl)}>
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__uer3H
                    )}
                  >
                    <React.Fragment>
                      <React.Fragment>{""}</React.Fragment>
                      {
                        <h2
                          className={classNames(
                            projectcss.all,
                            projectcss.h2,
                            projectcss.__wab_text,
                            sty.h2__rxHYy
                          )}
                        >
                          <React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{
                                fontWeight: 100,
                                color: "var(--token-24higxTT5khm)"
                              }}
                            >
                              {"Motivation"}
                            </span>
                          </React.Fragment>
                        </h2>
                      }
                      <React.Fragment>
                        {
                          "Mathematics is a journey through the beauty of patterns, relationships, symmetries and connections. Its seemingly vacuous abstractions are sometimes the most visceral and joyous way to partake in the language of reality of the universe around us. \n\n"
                        }
                      </React.Fragment>
                      {
                        <h2
                          className={classNames(
                            projectcss.all,
                            projectcss.h2,
                            projectcss.__wab_text,
                            sty.h2__sQwo3
                          )}
                        >
                          <React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{
                                fontWeight: 100,
                                color: "var(--token-24higxTT5khm)"
                              }}
                            >
                              {"Purpose"}
                            </span>
                          </React.Fragment>
                        </h2>
                      }
                      <React.Fragment>
                        {
                          "This club strives to be as oasis where we can all challenge ourselves to think slowly and clearly, in the security of each others company, unburdened by homework and exams, deadlines and projects. We will all learn together. \n\n"
                        }
                      </React.Fragment>
                      {
                        <h2
                          className={classNames(
                            projectcss.all,
                            projectcss.h2,
                            projectcss.__wab_text,
                            sty.h2__kvRpk
                          )}
                        >
                          <React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{
                                fontWeight: 100,
                                color: "var(--token-24higxTT5khm)"
                              }}
                            >
                              {"Course"}
                            </span>
                          </React.Fragment>
                        </h2>
                      }
                      <React.Fragment>
                        {
                          "In order to maximize the potential benefit to its members a thorough curriculum, inspired by the Art Of Problem Solving (Volumnes 1 and 2), will be used. This will provide a different outlook than traditional mathematics taught as part of the school curriculum. No textbook will be required to be bought by the members. Bringing some paper and pencils to work out ideas will be engouraged. \n\n"
                        }
                      </React.Fragment>
                      {
                        <h2
                          className={classNames(
                            projectcss.all,
                            projectcss.h2,
                            projectcss.__wab_text,
                            sty.h2__l1Ncu
                          )}
                        >
                          <React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{
                                fontWeight: 100,
                                color: "var(--token-24higxTT5khm)"
                              }}
                            >
                              {"Decorum"}
                            </span>
                          </React.Fragment>
                        </h2>
                      }
                      <React.Fragment>
                        {
                          "Communicating ideas to the group, enthusiastic problem solving, and gracious professionalism will be expected. The sessions might be challenging and sometimes the questions might be left unanswered (due to time or difficulty). Exposure, not mastery, might be what can reasonably be accompilished in the limited meeting times. \n\n"
                        }
                      </React.Fragment>
                      {
                        <h2
                          className={classNames(
                            projectcss.all,
                            projectcss.h2,
                            projectcss.__wab_text,
                            sty.h2__pTbqr
                          )}
                        >
                          <React.Fragment>
                            <span
                              className={
                                "plasmic_default__all plasmic_default__span"
                              }
                              style={{
                                fontWeight: 100,
                                color: "var(--token-24higxTT5khm)"
                              }}
                            >
                              {"Format"}
                            </span>
                          </React.Fragment>
                        </h2>
                      }
                      <React.Fragment>
                        {
                          "Each meeting will, typically, cover a fresh topic. The first 20-25 minutes of the session will be a 4-6 question quiz to whet the appetite of the members for the topic under discussion. The next 30-40 minutes will involve going over some theory, followed by working on solving 2-3 problems in class, together.\n"
                        }
                      </React.Fragment>
                    </React.Fragment>
                  </div>
                </div>
              </div>
            </div>
          </section>
          <section
            data-plasmic-name={"curriculum"}
            data-plasmic-override={overrides.curriculum}
            className={classNames(projectcss.all, sty.curriculum)}
            id={"Services"}
          >
            <div className={classNames(projectcss.all, sty.freeBox__a5Ds7)}>
              <PlasmicLink__
                data-plasmic-name={"link"}
                data-plasmic-override={overrides.link}
                className={classNames(
                  projectcss.all,
                  projectcss.a,
                  projectcss.__wab_text,
                  sty.link
                )}
                component={Link}
                id={"services"}
                platform={"nextjs"}
              >
                <React.Fragment>
                  <span
                    className={"plasmic_default__all plasmic_default__span"}
                    style={{ color: "var(--token-24higxTT5khm)" }}
                  >
                    {"CURRICULUM"}
                  </span>
                </React.Fragment>
              </PlasmicLink__>
              <h2
                className={classNames(
                  projectcss.all,
                  projectcss.h2,
                  projectcss.__wab_text,
                  sty.h2__jPDix
                )}
              >
                {"Outline of the topics to be covered"}
              </h2>
            </div>
            <div className={classNames(projectcss.all, sty.columns__oqlbq)}>
              <div className={classNames(projectcss.all, sty.column___6S8Z6)}>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__geHxl)}
                  displayHeight={"90px"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"90px"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/beginners_guide_website_in_3_minutes/images/uxDesignPng.png",
                    fullWidth: 512,
                    fullHeight: 512,
                    aspectRatio: undefined
                  }}
                />

                <h3
                  className={classNames(
                    projectcss.all,
                    projectcss.h3,
                    projectcss.__wab_text,
                    sty.h3__sD413
                  )}
                >
                  <React.Fragment>
                    <React.Fragment>{"Weeks 1\u201312 \n"}</React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ color: "var(--token-24higxTT5khm)" }}
                    >
                      {"AoPS Vol 1: Foundations"}
                    </span>
                  </React.Fragment>
                </h3>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__h56Lr
                  )}
                >
                  <React.Fragment>
                    <React.Fragment>{""}</React.Fragment>
                    {
                      <ol
                        className={classNames(
                          projectcss.all,
                          projectcss.ol,
                          sty.ol__vN2Jq
                        )}
                      >
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__ueBQ
                          )}
                        >
                          {
                            "Introduction to Problem Solving Strategies (Pigeonhole, Working Backwards, Invariants) Quiz: Basic puzzle-style questions."
                          }
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__b0Ujq
                          )}
                        >
                          {
                            "Arithmetic & Number Sense Tricks Quiz: Modular arithmetic with small mods"
                          }
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__ruQaz
                          )}
                        >
                          {
                            "Algebra I \u2013 Expressions & Equations Quiz: Simplify, solve linear equations, word problems."
                          }
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__nuewb
                          )}
                        >
                          {
                            "Algebra II \u2013 Quadratics & Factoring Quiz: Factoring, roots, simple applications."
                          }
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__oMzz3
                          )}
                        >
                          {
                            "Counting I \u2013 Basic Combinatorics Quiz: Permutations & combinations."
                          }
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li___2BCmI
                          )}
                        >
                          {
                            "Counting II \u2013 Binomial Theorem & Advanced Counting Quiz: Choose problems, coefficient extraction."
                          }
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__egZFk
                          )}
                        >
                          {
                            "Number Theory I \u2013 Divisibility & GCD/LCM Quiz: gcd, lcm, Euclidean algorithm, simple Diophantine equations."
                          }
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__br1Eq
                          )}
                        >
                          {
                            "Number Theory II \u2013 Modular Arithmetic & Congruences Quiz: Solve modular congruences, Fermat\u2019s little theorem basics."
                          }
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__kclD1
                          )}
                        >
                          {
                            "Geometry I \u2013 Triangles & Circles Basics Quiz: Angle chasing, Pythagorean triples."
                          }
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__mqZzR
                          )}
                        >
                          {
                            "Geometry II \u2013 Coordinate Geometry Quiz: Midpoints, slopes, circle equations."
                          }
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__mpXtw
                          )}
                        >
                          {
                            "Probability I \u2013 Intro to Probability Quiz: Coin flips, dice rolls."
                          }
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__qLvvr
                          )}
                        >
                          {
                            "Probability II \u2013 Conditional Probability & Expected Value Quiz: Non-trivial counting probability, expected dice rolls."
                          }
                        </li>
                      </ol>
                    }
                    <React.Fragment>{""}</React.Fragment>
                  </React.Fragment>
                </div>
              </div>
              <div className={classNames(projectcss.all, sty.column__c4TQe)}>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img___6Bbdw)}
                  displayHeight={"90px"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"90px"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/beginners_guide_website_in_3_minutes/images/brushPng.png",
                    fullWidth: 512,
                    fullHeight: 512,
                    aspectRatio: undefined
                  }}
                />

                <h3
                  className={classNames(
                    projectcss.all,
                    projectcss.h3,
                    projectcss.__wab_text,
                    sty.h3__eX3Oh
                  )}
                >
                  <React.Fragment>
                    <React.Fragment>{"Weeks 13\u201322 \n"}</React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ color: "var(--token-24higxTT5khm)" }}
                    >
                      {"Bridge Topics "}
                    </span>
                  </React.Fragment>
                </h3>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__fGz1X
                  )}
                >
                  <React.Fragment>
                    <React.Fragment>{""}</React.Fragment>
                    {
                      <ol
                        className={classNames(
                          projectcss.all,
                          projectcss.ol,
                          sty.ol__siVs2
                        )}
                      >
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__jDQf
                          )}
                        >
                          {
                            "Inequalities I \u2013 AM\u2013GM & Cauchy-Schwarz basics \nQuiz: AM\u2013GM applications, basic inequalities."
                          }
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__wHiE
                          )}
                        >
                          {
                            "Functions & Functional Equations (Intro)\nQuiz: f(x+1) = f(x) + \u2026 type."
                          }
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__kWuZz
                          )}
                        >
                          {
                            "Polynomials I \u2013 Vieta\u2019s Formulas\nQuiz: Root-coefficient relationships."
                          }
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__qmCi7
                          )}
                        >
                          {
                            "Polynomials II \u2013 Symmetric Polynomials & Roots of Unity \nQuiz: Classic polynomial identities."
                          }
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__vmJg2
                          )}
                        >
                          {
                            "Geometry III \u2013 Similarity & Special Lines \nQuiz: Ceva/Menelaus warmup problems."
                          }
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__qekwA
                          )}
                        >
                          {
                            "Geometry IV \u2013 Area & Length in Advanced Figures \nQuiz: Coordinate/geometry mix."
                          }
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__q9VMf
                          )}
                        >
                          {
                            "Number Theory III \u2013 Euler\u2019s Totient & Advanced Congruences \nQuiz: \u03c6(n), modular inverses."
                          }
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__eAdjp
                          )}
                        >
                          {
                            "Number Theory IV \u2013 Order, Primitive Roots \nQuiz: Small primitive roots & cycles."
                          }
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__cG6Fz
                          )}
                        >
                          {
                            "Probability III \u2013 Advanced Probability & Expected Value \nQuiz: Conditional, multiple dice, nonuniform probability.\n"
                          }
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__eEnh4
                          )}
                        >
                          {
                            "Inequalities II \u2013 More Contest-Style Inequalities \nQuiz: Olympiad-level AM\u2013GM applications."
                          }
                        </li>
                      </ol>
                    }
                    <React.Fragment>{""}</React.Fragment>
                  </React.Fragment>
                </div>
              </div>
              <div className={classNames(projectcss.all, sty.column__crhGs)}>
                <PlasmicImg__
                  alt={""}
                  className={classNames(sty.img__b4RzE)}
                  displayHeight={"90px"}
                  displayMaxHeight={"none"}
                  displayMaxWidth={"100%"}
                  displayMinHeight={"0"}
                  displayMinWidth={"0"}
                  displayWidth={"90px"}
                  loading={"lazy"}
                  src={{
                    src: "/plasmic/beginners_guide_website_in_3_minutes/images/programmingPng.png",
                    fullWidth: 512,
                    fullHeight: 512,
                    aspectRatio: undefined
                  }}
                />

                <h3
                  className={classNames(
                    projectcss.all,
                    projectcss.h3,
                    projectcss.__wab_text,
                    sty.h3__lcG7L
                  )}
                >
                  <React.Fragment>
                    <React.Fragment>{"Weeks 23\u201330\n"}</React.Fragment>
                    <span
                      className={"plasmic_default__all plasmic_default__span"}
                      style={{ color: "var(--token-24higxTT5khm)" }}
                    >
                      {"AoPS Vol 2: Advanced"}
                    </span>
                  </React.Fragment>
                </h3>
                <div
                  className={classNames(
                    projectcss.all,
                    projectcss.__wab_text,
                    sty.text__falxu
                  )}
                >
                  <React.Fragment>
                    <React.Fragment>{""}</React.Fragment>
                    {
                      <ol
                        className={classNames(
                          projectcss.all,
                          projectcss.ol,
                          sty.ol__fhl80
                        )}
                      >
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__r51F3
                          )}
                        >
                          {
                            "Complex Numbers in Geometry \nQuiz: Represent points as complex numbers."
                          }
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__y5TOi
                          )}
                        >
                          {
                            "Geometry V \u2013 Inversion & Transformations (Intro level) \nQuiz: Transform simple geometric figures."
                          }
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__c1Ngu
                          )}
                        >
                          {
                            "Algebra III \u2013 Sequences & Series \nQuiz: Arithmetic/Geometric progressions."
                          }
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li___8MLo9
                          )}
                        >
                          {
                            "Advanced Combinatorics \u2013 Stars and Bars, PIE \nQuiz: Distribution problems.\nF"
                          }
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__pe27H
                          )}
                        >
                          {
                            "Functional Equations II \u2013 Olympiad-Style \nQuiz: Harder f(x+y) = f(x) + f(y)."
                          }
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__w5Er8
                          )}
                        >
                          {
                            "Mock Contest I \u2013 Mixed Topics \nQuiz: 6-problem mini-contest (easy to hard)."
                          }
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__riMja
                          )}
                        >
                          {
                            "Mock Contest II + Strategy Session \nQuiz: Timed 6 problems + solution writing."
                          }
                        </li>
                        <li
                          className={classNames(
                            projectcss.all,
                            projectcss.li,
                            projectcss.__wab_text,
                            sty.li__djbWy
                          )}
                        >
                          {
                            "Guest Lecture + Wrap-Up + Next Steps (AMC, AIME prep)\n\n\n"
                          }
                        </li>
                      </ol>
                    }
                    <React.Fragment>{""}</React.Fragment>
                  </React.Fragment>
                </div>
              </div>
            </div>
          </section>
          <section
            data-plasmic-name={"meetings"}
            data-plasmic-override={overrides.meetings}
            className={classNames(projectcss.all, sty.meetings)}
            id={"work"}
          >
            <div className={classNames(projectcss.all, sty.freeBox___5A2Ma)}>
              <div
                className={classNames(
                  projectcss.all,
                  projectcss.__wab_text,
                  sty.text__hjByZ
                )}
                id={"services"}
              >
                {"MEETINGS"}
              </div>
              <h2
                className={classNames(
                  projectcss.all,
                  projectcss.h2,
                  projectcss.__wab_text,
                  sty.h2___3Cfcf
                )}
              >
                {"Weekly meeting notes"}
              </h2>
            </div>
            <div className={classNames(projectcss.all, sty.freeBox__nwnU1)}>
              <div className={classNames(projectcss.all, sty.columns__xbqAl)}>
                <div className={classNames(projectcss.all, sty.column__kzf7P)}>
                  <Reveal
                    className={classNames("__wab_instance", sty.reveal__zF8Qx)}
                    direction={"up"}
                    duration={500}
                    triggerOnce={true}
                  >
                    <ProjectCard
                      className={classNames(
                        "__wab_instance",
                        sty.projectCard__tvcPb
                      )}
                      description={
                        "Introduction to Problem Solving Strategies (Pigeonhole, Working Backwards, Invariants) \nQuiz: Basic puzzle-style questions."
                      }
                      link={`/project-relaunch`}
                      title={"Week 1 "}
                    />
                  </Reveal>
                </div>
              </div>
              <div className={classNames(projectcss.all, sty.columns__jdk61)}>
                <div className={classNames(projectcss.all, sty.column__tZtT)}>
                  <Reveal
                    className={classNames("__wab_instance", sty.reveal__nJy91)}
                    delay={500}
                    direction={"up"}
                    duration={500}
                    triggerOnce={true}
                  >
                    <ProjectCard
                      className={classNames(
                        "__wab_instance",
                        sty.projectCard__nurHr
                      )}
                      description={
                        "Arithmetic & Number Sense Tricks Quiz: Modular arithmetic with small mods"
                      }
                      image={{
                        src: "/plasmic/beginners_guide_website_in_3_minutes/images/abstractBackgroundWithSoftGradientColorAndDynamicShadowOnBackgroundBackgroundForWallpaperEps10FreeVectorJpg.jpg",
                        fullWidth: 1920,
                        fullHeight: 1080,
                        aspectRatio: undefined
                      }}
                      link={`/premium-sass-design`}
                      title={"Week 2 "}
                    />
                  </Reveal>
                </div>
              </div>
              <div className={classNames(projectcss.all, sty.columns__byDdg)}>
                <div className={classNames(projectcss.all, sty.column__vnjK)}>
                  <Reveal
                    className={classNames("__wab_instance", sty.reveal__g9YFg)}
                    delay={500}
                    direction={"up"}
                    duration={500}
                    triggerOnce={true}
                  >
                    <ProjectCard
                      className={classNames(
                        "__wab_instance",
                        sty.projectCard__j3Eux
                      )}
                      description={
                        "Algebra I \u2013 Expressions & Equations Quiz: Simplify, solve linear equations, word problems."
                      }
                      image={{
                        src: "/plasmic/beginners_guide_website_in_3_minutes/images/abstractBackgroundWithSoftGradientColorAndDynamicShadowOnBackgroundBackgroundForWallpaperEps10FreeVectorJpg.jpg",
                        fullWidth: 1920,
                        fullHeight: 1080,
                        aspectRatio: undefined
                      }}
                      link={`/premium-sass-design`}
                      title={"Week 3 "}
                    />
                  </Reveal>
                </div>
              </div>
            </div>
          </section>
          <ContactSection
            data-plasmic-name={"contactSection"}
            data-plasmic-override={overrides.contactSection}
            className={classNames("__wab_instance", sty.contactSection)}
          />

          <Footer
            data-plasmic-name={"footer"}
            data-plasmic-override={overrides.footer}
            className={classNames("__wab_instance", sty.footer)}
          />
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: [
    "root",
    "navigationBar",
    "introduction",
    "mainTextContainer",
    "h1",
    "curriculum",
    "link",
    "meetings",
    "contactSection",
    "footer"
  ],
  navigationBar: ["navigationBar"],
  introduction: ["introduction", "mainTextContainer", "h1"],
  mainTextContainer: ["mainTextContainer", "h1"],
  h1: ["h1"],
  curriculum: ["curriculum", "link"],
  link: ["link"],
  meetings: ["meetings"],
  contactSection: ["contactSection"],
  footer: ["footer"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  root: "div";
  navigationBar: typeof NavigationBar;
  introduction: "section";
  mainTextContainer: "div";
  h1: "h1";
  curriculum: "section";
  link: "a";
  meetings: "section";
  contactSection: typeof ContactSection;
  footer: typeof Footer;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicHomepage__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicHomepage__VariantsArgs;
    args?: PlasmicHomepage__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicHomepage__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicHomepage__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicHomepage__ArgProps,
          internalVariantPropNames: PlasmicHomepage__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicHomepage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHomepage";
  } else {
    func.displayName = `PlasmicHomepage.${nodeName}`;
  }
  return func;
}

export const PlasmicHomepage = Object.assign(
  // Top-level PlasmicHomepage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    navigationBar: makeNodeComponent("navigationBar"),
    introduction: makeNodeComponent("introduction"),
    mainTextContainer: makeNodeComponent("mainTextContainer"),
    h1: makeNodeComponent("h1"),
    curriculum: makeNodeComponent("curriculum"),
    link: makeNodeComponent("link"),
    meetings: makeNodeComponent("meetings"),
    contactSection: makeNodeComponent("contactSection"),
    footer: makeNodeComponent("footer"),

    // Metadata about props expected for PlasmicHomepage
    internalVariantProps: PlasmicHomepage__VariantProps,
    internalArgProps: PlasmicHomepage__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "Anna.Design",
      description:
        "Lorem ipsum dolor sit amet, consectetur adipiscing elit. Suspendisse varius enim in eros elementum tristique. Duis cursus, mi quis viverra ornare, eros dolor interdum nulla, ut commodo diam libero vitae erat. Aenean faucibus nibh et justo cursus id rutrum lorem imperdiet. Nunc ut sem vitae risus tristique posuere.",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicHomepage;
/* prettier-ignore-end */
